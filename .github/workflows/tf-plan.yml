name: terraform-plan

on:
    pull_request:
        paths:
            - ".github/workflows/tf-plan-garnet.yml"
            - "terraform/**"
    workflow_dispatch:

env:
    AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    AWS_REGION: "ap-northeast-1"

    TF_VERSION: "1.4.6"
    TF_VAR_aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
    TF_VAR_aws_region: "ap-northeast-1"

    # Snowflake
    SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}  # account locator
    SNOWFLAKE_REGION: "ap-northeast-1.aws"
    SNOWFLAKE_USER: "TERRAFORM_USER"
    SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
    SNOWFLAKE_ROLE: "TERRAFORM"
    SNOWFLAKE_WAREHOUSE: "TERRAFORM_WH"

jobs:
    plan-common:
        runs-on: ubuntu-22.04
        timeout-minutes: 60
        permissions:
            id-token: write
            contents: read
            pull-requests: write
            statuses: write
        strategy:
            matrix:
                path:
                    - common-snowflake
        defaults:
            run:
                working-directory: ./terraform/project
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v2
              with:
                  terraform_version: ${{ env.TF_VERSION }}
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@master
              with:
                  aws-region: ${{ env.AWS_REGION }}
                  role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/ogawa-github-actions-ro-role
            - name: Checkout format
              run: terraform fmt -check -recursive

            - name: Init
              run: terraform -chdir=${{ matrix.path }} init -upgrade -no-color

            - name: Check validate
              run: terraform -chdir=${{ matrix.path }} validate

            - name: Plan
              run: terraform -chdir=${{ matrix.path }} plan -no-color -input=false
